//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BiblioLecteur
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class bibliothequeEntities : DbContext
    {
        public bibliothequeEntities()
            : base("name=bibliothequeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int AddLecteur(string userName, string passwordHash, Nullable<int> biblioPrincip)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var passwordHashParameter = passwordHash != null ?
                new ObjectParameter("PasswordHash", passwordHash) :
                new ObjectParameter("PasswordHash", typeof(string));
    
            var biblioPrincipParameter = biblioPrincip.HasValue ?
                new ObjectParameter("biblioPrincip", biblioPrincip) :
                new ObjectParameter("biblioPrincip", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddLecteur", userNameParameter, passwordHashParameter, biblioPrincipParameter);
        }
    
        public virtual ObjectResult<CA_Livre_Result> CA_Livre()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CA_Livre_Result>("CA_Livre");
        }
    
        public virtual ObjectResult<CheckingUser_Result> CheckingUser(string userName, string password, string libelle)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var libelleParameter = libelle != null ?
                new ObjectParameter("libelle", libelle) :
                new ObjectParameter("libelle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckingUser_Result>("CheckingUser", userNameParameter, passwordParameter, libelleParameter);
        }
    
        public virtual ObjectResult<CheckngUser_Result> CheckngUser(string userName, string password, string libelle)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var libelleParameter = libelle != null ?
                new ObjectParameter("libelle", libelle) :
                new ObjectParameter("libelle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckngUser_Result>("CheckngUser", userNameParameter, passwordParameter, libelleParameter);
        }
    
        public virtual ObjectResult<CountExemplaire_SelectAll_Result> CountExemplaire_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CountExemplaire_SelectAll_Result>("CountExemplaire_SelectAll");
        }
    
        public virtual int CustomEmprunt_Create(Nullable<decimal> prixEmprunt, string exemplaireName, string name, string biblio, Nullable<System.DateTime> date_de_retour)
        {
            var prixEmpruntParameter = prixEmprunt.HasValue ?
                new ObjectParameter("prixEmprunt", prixEmprunt) :
                new ObjectParameter("prixEmprunt", typeof(decimal));
    
            var exemplaireNameParameter = exemplaireName != null ?
                new ObjectParameter("exemplaireName", exemplaireName) :
                new ObjectParameter("exemplaireName", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var biblioParameter = biblio != null ?
                new ObjectParameter("biblio", biblio) :
                new ObjectParameter("biblio", typeof(string));
    
            var date_de_retourParameter = date_de_retour.HasValue ?
                new ObjectParameter("date_de_retour", date_de_retour) :
                new ObjectParameter("date_de_retour", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CustomEmprunt_Create", prixEmpruntParameter, exemplaireNameParameter, nameParameter, biblioParameter, date_de_retourParameter);
        }
    
        public virtual int EmpDeleteById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmpDeleteById", idParameter);
        }
    
        public virtual int Emprunt_Create(Nullable<int> lecteurID, Nullable<decimal> prixEmprunt, Nullable<int> exemplaireID, Nullable<System.DateTime> date_de_retour)
        {
            var lecteurIDParameter = lecteurID.HasValue ?
                new ObjectParameter("lecteurID", lecteurID) :
                new ObjectParameter("lecteurID", typeof(int));
    
            var prixEmpruntParameter = prixEmprunt.HasValue ?
                new ObjectParameter("prixEmprunt", prixEmprunt) :
                new ObjectParameter("prixEmprunt", typeof(decimal));
    
            var exemplaireIDParameter = exemplaireID.HasValue ?
                new ObjectParameter("exemplaireID", exemplaireID) :
                new ObjectParameter("exemplaireID", typeof(int));
    
            var date_de_retourParameter = date_de_retour.HasValue ?
                new ObjectParameter("date_de_retour", date_de_retour) :
                new ObjectParameter("date_de_retour", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Emprunt_Create", lecteurIDParameter, prixEmpruntParameter, exemplaireIDParameter, date_de_retourParameter);
        }
    
        public virtual ObjectResult<Emprunt_Reload_Result> Emprunt_Reload()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Emprunt_Reload_Result>("Emprunt_Reload");
        }
    
        public virtual ObjectResult<Emprunt_SelectAll_Result> Emprunt_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Emprunt_SelectAll_Result>("Emprunt_SelectAll");
        }
    
        public virtual int examplaire_Create(string code, Nullable<System.DateTime> date_achat, Nullable<System.DateTime> date_emprunt, Nullable<int> id_biblio, Nullable<int> id_livre)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var date_achatParameter = date_achat.HasValue ?
                new ObjectParameter("date_achat", date_achat) :
                new ObjectParameter("date_achat", typeof(System.DateTime));
    
            var date_empruntParameter = date_emprunt.HasValue ?
                new ObjectParameter("date_emprunt", date_emprunt) :
                new ObjectParameter("date_emprunt", typeof(System.DateTime));
    
            var id_biblioParameter = id_biblio.HasValue ?
                new ObjectParameter("id_biblio", id_biblio) :
                new ObjectParameter("id_biblio", typeof(int));
    
            var id_livreParameter = id_livre.HasValue ?
                new ObjectParameter("id_livre", id_livre) :
                new ObjectParameter("id_livre", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("examplaire_Create", codeParameter, date_achatParameter, date_empruntParameter, id_biblioParameter, id_livreParameter);
        }
    
        public virtual int examplaire_Update(Nullable<int> id, string code, Nullable<System.DateTime> date_achat, Nullable<System.DateTime> date_emprunt, Nullable<int> id_biblio)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var date_achatParameter = date_achat.HasValue ?
                new ObjectParameter("date_achat", date_achat) :
                new ObjectParameter("date_achat", typeof(System.DateTime));
    
            var date_empruntParameter = date_emprunt.HasValue ?
                new ObjectParameter("date_emprunt", date_emprunt) :
                new ObjectParameter("date_emprunt", typeof(System.DateTime));
    
            var id_biblioParameter = id_biblio.HasValue ?
                new ObjectParameter("id_biblio", id_biblio) :
                new ObjectParameter("id_biblio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("examplaire_Update", idParameter, codeParameter, date_achatParameter, date_empruntParameter, id_biblioParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Exemplaire_AllRetardsUser(string lecteurNom)
        {
            var lecteurNomParameter = lecteurNom != null ?
                new ObjectParameter("lecteurNom", lecteurNom) :
                new ObjectParameter("lecteurNom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Exemplaire_AllRetardsUser", lecteurNomParameter);
        }
    
        public virtual ObjectResult<Exemplaire_Biblio_SelectAll_Result> Exemplaire_Biblio_SelectAll(string nomBiblio)
        {
            var nomBiblioParameter = nomBiblio != null ?
                new ObjectParameter("nomBiblio", nomBiblio) :
                new ObjectParameter("nomBiblio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Exemplaire_Biblio_SelectAll_Result>("Exemplaire_Biblio_SelectAll", nomBiblioParameter);
        }
    
        public virtual ObjectResult<Exemplaire_SelectAll_Result> Exemplaire_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Exemplaire_SelectAll_Result>("Exemplaire_SelectAll");
        }
    
        public virtual ObjectResult<Exemplaire_SelectAllRetards_Result> Exemplaire_SelectAllRetards()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Exemplaire_SelectAllRetards_Result>("Exemplaire_SelectAllRetards");
        }
    
        public virtual ObjectResult<Nullable<int>> Exemplaire_SelectAllRetardsUserCalledTrigger(string lecteurNom)
        {
            var lecteurNomParameter = lecteurNom != null ?
                new ObjectParameter("lecteurNom", lecteurNom) :
                new ObjectParameter("lecteurNom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Exemplaire_SelectAllRetardsUserCalledTrigger", lecteurNomParameter);
        }
    
        public virtual ObjectResult<Exemplaire_SelectAllRetardsUsers_Result> Exemplaire_SelectAllRetardsUsers(string lecteurNom)
        {
            var lecteurNomParameter = lecteurNom != null ?
                new ObjectParameter("lecteurNom", lecteurNom) :
                new ObjectParameter("lecteurNom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Exemplaire_SelectAllRetardsUsers_Result>("Exemplaire_SelectAllRetardsUsers", lecteurNomParameter);
        }
    
        public virtual ObjectResult<Exemplaire_SoldeRetardToday_Result> Exemplaire_SoldeRetardToday()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Exemplaire_SoldeRetardToday_Result>("Exemplaire_SoldeRetardToday");
        }
    
        public virtual int ExemplaireDeleteById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExemplaireDeleteById", idParameter);
        }
    
        public virtual ObjectResult<ExemplaireParBiblio_SelectAll_Result> ExemplaireParBiblio_SelectAll(string nomBiblio)
        {
            var nomBiblioParameter = nomBiblio != null ?
                new ObjectParameter("nomBiblio", nomBiblio) :
                new ObjectParameter("nomBiblio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExemplaireParBiblio_SelectAll_Result>("ExemplaireParBiblio_SelectAll", nomBiblioParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> gestionRetour(Nullable<int> myid)
        {
            var myidParameter = myid.HasValue ?
                new ObjectParameter("myid", myid) :
                new ObjectParameter("myid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("gestionRetour", myidParameter);
        }
    
        public virtual ObjectResult<string> GetImage(string titre)
        {
            var titreParameter = titre != null ?
                new ObjectParameter("titre", titre) :
                new ObjectParameter("titre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetImage", titreParameter);
        }
    
        public virtual int InsertReservations(string livrTitle, string userName)
        {
            var livrTitleParameter = livrTitle != null ?
                new ObjectParameter("LivrTitle", livrTitle) :
                new ObjectParameter("LivrTitle", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertReservations", livrTitleParameter, userNameParameter);
        }
    
        public virtual int livre_Create(string isbn, string titre, string image)
        {
            var isbnParameter = isbn != null ?
                new ObjectParameter("isbn", isbn) :
                new ObjectParameter("isbn", typeof(string));
    
            var titreParameter = titre != null ?
                new ObjectParameter("titre", titre) :
                new ObjectParameter("titre", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("image", image) :
                new ObjectParameter("image", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("livre_Create", isbnParameter, titreParameter, imageParameter);
        }
    
        public virtual ObjectResult<NbreExemplaire_SelectAll_Result> NbreExemplaire_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NbreExemplaire_SelectAll_Result>("NbreExemplaire_SelectAll");
        }
    
        public virtual ObjectResult<NbreExemplaireParBiblio_SelectAll_Result> NbreExemplaireParBiblio_SelectAll(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NbreExemplaireParBiblio_SelectAll_Result>("NbreExemplaireParBiblio_SelectAll", userNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Principal_Annexe(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Principal_Annexe", iDParameter);
        }
    
        public virtual ObjectResult<Reservation_SelectAll_Result> Reservation_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Reservation_SelectAll_Result>("Reservation_SelectAll");
        }
    
        public virtual ObjectResult<Search_Exemplaire_Biblio_SelectAll_Result> Search_Exemplaire_Biblio_SelectAll(string nomBiblio, string codeexemplaire)
        {
            var nomBiblioParameter = nomBiblio != null ?
                new ObjectParameter("nomBiblio", nomBiblio) :
                new ObjectParameter("nomBiblio", typeof(string));
    
            var codeexemplaireParameter = codeexemplaire != null ?
                new ObjectParameter("codeexemplaire", codeexemplaire) :
                new ObjectParameter("codeexemplaire", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Search_Exemplaire_Biblio_SelectAll_Result>("Search_Exemplaire_Biblio_SelectAll", nomBiblioParameter, codeexemplaireParameter);
        }
    
        public virtual ObjectResult<SelectAll_Biblio_Result> SelectAll_Biblio()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAll_Biblio_Result>("SelectAll_Biblio");
        }
    
        public virtual ObjectResult<soldeRetour_Result> soldeRetour()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<soldeRetour_Result>("soldeRetour");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int UpdateEmpruntByID(Nullable<int> id, Nullable<System.DateTime> date_de_retour)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var date_de_retourParameter = date_de_retour.HasValue ?
                new ObjectParameter("date_de_retour", date_de_retour) :
                new ObjectParameter("date_de_retour", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEmpruntByID", idParameter, date_de_retourParameter);
        }
    
        public virtual ObjectResult<User_Reservation_Select_Result> User_Reservation_Select(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<User_Reservation_Select_Result>("User_Reservation_Select", userNameParameter);
        }
    
        public virtual ObjectResult<User_ReservationParBiblio_Select_Result> User_ReservationParBiblio_Select(string nomBiblio, string userName)
        {
            var nomBiblioParameter = nomBiblio != null ?
                new ObjectParameter("nomBiblio", nomBiblio) :
                new ObjectParameter("nomBiblio", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<User_ReservationParBiblio_Select_Result>("User_ReservationParBiblio_Select", nomBiblioParameter, userNameParameter);
        }
    
        public virtual ObjectResult<VerifieSiDispo_Result> VerifieSiDispo(string biblio, string livre)
        {
            var biblioParameter = biblio != null ?
                new ObjectParameter("biblio", biblio) :
                new ObjectParameter("biblio", typeof(string));
    
            var livreParameter = livre != null ?
                new ObjectParameter("livre", livre) :
                new ObjectParameter("livre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerifieSiDispo_Result>("VerifieSiDispo", biblioParameter, livreParameter);
        }
    
        public virtual int VerifieSiDispoAllLibrary(string biblio, string livre)
        {
            var biblioParameter = biblio != null ?
                new ObjectParameter("biblio", biblio) :
                new ObjectParameter("biblio", typeof(string));
    
            var livreParameter = livre != null ?
                new ObjectParameter("livre", livre) :
                new ObjectParameter("livre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VerifieSiDispoAllLibrary", biblioParameter, livreParameter);
        }
    }
}
