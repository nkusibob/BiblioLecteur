//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BiblioLecteur.ServiceReferenceEmprunts {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExceptionContainer", Namespace="http://schemas.datacontract.org/2004/07/wcflibrary")]
    [System.SerializableAttribute()]
    public partial class ExceptionContainer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceEmprunts.IServiceEmprunts")]
    public interface IServiceEmprunts {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmprunts/InsertEmprunt", ReplyAction="http://tempuri.org/IServiceEmprunts/InsertEmpruntResponse")]
        void InsertEmprunt(string titre, string nom, System.Nullable<System.DateTime> dtRetour, string biblio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmprunts/InsertEmprunt", ReplyAction="http://tempuri.org/IServiceEmprunts/InsertEmpruntResponse")]
        System.Threading.Tasks.Task InsertEmpruntAsync(string titre, string nom, System.Nullable<System.DateTime> dtRetour, string biblio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmprunts/UpdateEmprunt", ReplyAction="http://tempuri.org/IServiceEmprunts/UpdateEmpruntResponse")]
        void UpdateEmprunt(int id, System.DateTime dtRetour);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmprunts/UpdateEmprunt", ReplyAction="http://tempuri.org/IServiceEmprunts/UpdateEmpruntResponse")]
        System.Threading.Tasks.Task UpdateEmpruntAsync(int id, System.DateTime dtRetour);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmprunts/LoadAllEmprunt", ReplyAction="http://tempuri.org/IServiceEmprunts/LoadAllEmpruntResponse")]
        System.Data.DataSet LoadAllEmprunt();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmprunts/LoadAllEmprunt", ReplyAction="http://tempuri.org/IServiceEmprunts/LoadAllEmpruntResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> LoadAllEmpruntAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmprunts/NbreEmpruntAnnexePrincipal", ReplyAction="http://tempuri.org/IServiceEmprunts/NbreEmpruntAnnexePrincipalResponse")]
        void NbreEmpruntAnnexePrincipal(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmprunts/NbreEmpruntAnnexePrincipal", ReplyAction="http://tempuri.org/IServiceEmprunts/NbreEmpruntAnnexePrincipalResponse")]
        System.Threading.Tasks.Task NbreEmpruntAnnexePrincipalAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmprunts/beforeEmprunter", ReplyAction="http://tempuri.org/IServiceEmprunts/beforeEmprunterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblioLecteur.ServiceReferenceEmprunts.ExceptionContainer), Action="http://tempuri.org/IServiceEmprunts/beforeEmprunterExceptionContainerFault", Name="ExceptionContainer", Namespace="http://schemas.datacontract.org/2004/07/wcflibrary")]
        void beforeEmprunter(string livre, string user, string biblio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmprunts/beforeEmprunter", ReplyAction="http://tempuri.org/IServiceEmprunts/beforeEmprunterResponse")]
        System.Threading.Tasks.Task beforeEmprunterAsync(string livre, string user, string biblio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmprunts/beforeEmprunterAdo", ReplyAction="http://tempuri.org/IServiceEmprunts/beforeEmprunterAdoResponse")]
        void beforeEmprunterAdo(string livre, string user, string biblio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmprunts/beforeEmprunterAdo", ReplyAction="http://tempuri.org/IServiceEmprunts/beforeEmprunterAdoResponse")]
        System.Threading.Tasks.Task beforeEmprunterAdoAsync(string livre, string user, string biblio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmprunts/NbreEmpruntAnnexePrincipalAdo", ReplyAction="http://tempuri.org/IServiceEmprunts/NbreEmpruntAnnexePrincipalAdoResponse")]
        int NbreEmpruntAnnexePrincipalAdo(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmprunts/NbreEmpruntAnnexePrincipalAdo", ReplyAction="http://tempuri.org/IServiceEmprunts/NbreEmpruntAnnexePrincipalAdoResponse")]
        System.Threading.Tasks.Task<int> NbreEmpruntAnnexePrincipalAdoAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmprunts/NbreEmpruntAnnexeAdo", ReplyAction="http://tempuri.org/IServiceEmprunts/NbreEmpruntAnnexeAdoResponse")]
        int NbreEmpruntAnnexeAdo(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmprunts/NbreEmpruntAnnexeAdo", ReplyAction="http://tempuri.org/IServiceEmprunts/NbreEmpruntAnnexeAdoResponse")]
        System.Threading.Tasks.Task<int> NbreEmpruntAnnexeAdoAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmprunts/InsertEmpruntEF", ReplyAction="http://tempuri.org/IServiceEmprunts/InsertEmpruntEFResponse")]
        void InsertEmpruntEF(string titre, string nom, System.Nullable<System.DateTime> dtRetour, string biblio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmprunts/InsertEmpruntEF", ReplyAction="http://tempuri.org/IServiceEmprunts/InsertEmpruntEFResponse")]
        System.Threading.Tasks.Task InsertEmpruntEFAsync(string titre, string nom, System.Nullable<System.DateTime> dtRetour, string biblio);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceEmpruntsChannel : BiblioLecteur.ServiceReferenceEmprunts.IServiceEmprunts, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceEmpruntsClient : System.ServiceModel.ClientBase<BiblioLecteur.ServiceReferenceEmprunts.IServiceEmprunts>, BiblioLecteur.ServiceReferenceEmprunts.IServiceEmprunts {
        
        public ServiceEmpruntsClient() {
        }
        
        public ServiceEmpruntsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceEmpruntsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceEmpruntsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceEmpruntsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void InsertEmprunt(string titre, string nom, System.Nullable<System.DateTime> dtRetour, string biblio) {
            base.Channel.InsertEmprunt(titre, nom, dtRetour, biblio);
        }
        
        public System.Threading.Tasks.Task InsertEmpruntAsync(string titre, string nom, System.Nullable<System.DateTime> dtRetour, string biblio) {
            return base.Channel.InsertEmpruntAsync(titre, nom, dtRetour, biblio);
        }
        
        public void UpdateEmprunt(int id, System.DateTime dtRetour) {
            base.Channel.UpdateEmprunt(id, dtRetour);
        }
        
        public System.Threading.Tasks.Task UpdateEmpruntAsync(int id, System.DateTime dtRetour) {
            return base.Channel.UpdateEmpruntAsync(id, dtRetour);
        }
        
        public System.Data.DataSet LoadAllEmprunt() {
            return base.Channel.LoadAllEmprunt();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> LoadAllEmpruntAsync() {
            return base.Channel.LoadAllEmpruntAsync();
        }
        
        public void NbreEmpruntAnnexePrincipal(string user) {
            base.Channel.NbreEmpruntAnnexePrincipal(user);
        }
        
        public System.Threading.Tasks.Task NbreEmpruntAnnexePrincipalAsync(string user) {
            return base.Channel.NbreEmpruntAnnexePrincipalAsync(user);
        }
        
        public void beforeEmprunter(string livre, string user, string biblio) {
            base.Channel.beforeEmprunter(livre, user, biblio);
        }
        
        public System.Threading.Tasks.Task beforeEmprunterAsync(string livre, string user, string biblio) {
            return base.Channel.beforeEmprunterAsync(livre, user, biblio);
        }
        
        public void beforeEmprunterAdo(string livre, string user, string biblio) {
            base.Channel.beforeEmprunterAdo(livre, user, biblio);
        }
        
        public System.Threading.Tasks.Task beforeEmprunterAdoAsync(string livre, string user, string biblio) {
            return base.Channel.beforeEmprunterAdoAsync(livre, user, biblio);
        }
        
        public int NbreEmpruntAnnexePrincipalAdo(string user) {
            return base.Channel.NbreEmpruntAnnexePrincipalAdo(user);
        }
        
        public System.Threading.Tasks.Task<int> NbreEmpruntAnnexePrincipalAdoAsync(string user) {
            return base.Channel.NbreEmpruntAnnexePrincipalAdoAsync(user);
        }
        
        public int NbreEmpruntAnnexeAdo(string user) {
            return base.Channel.NbreEmpruntAnnexeAdo(user);
        }
        
        public System.Threading.Tasks.Task<int> NbreEmpruntAnnexeAdoAsync(string user) {
            return base.Channel.NbreEmpruntAnnexeAdoAsync(user);
        }
        
        public void InsertEmpruntEF(string titre, string nom, System.Nullable<System.DateTime> dtRetour, string biblio) {
            base.Channel.InsertEmpruntEF(titre, nom, dtRetour, biblio);
        }
        
        public System.Threading.Tasks.Task InsertEmpruntEFAsync(string titre, string nom, System.Nullable<System.DateTime> dtRetour, string biblio) {
            return base.Channel.InsertEmpruntEFAsync(titre, nom, dtRetour, biblio);
        }
    }
}
